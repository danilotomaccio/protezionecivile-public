{"version":3,"file":"js/376.734fbad0.js","mappings":"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","sources":["webpack://protezione-civile/./src/services/AdminService.ts","webpack://protezione-civile/./src/services/NotificationService.ts","webpack://protezione-civile/./src/views/NewTopic.vue?5fc3","webpack://protezione-civile/./src/views/NewTopic.vue?d7cd","webpack://protezione-civile/./src/views/NewTopic.vue"],"sourcesContent":["import { User } from \"@/model/User\";\nimport { FirebaseDBService } from \"./FirebaseDBService\"\n\nexport class AdminService {\n\n    private db: FirebaseDBService;\n    // private store: Store<RootState>;\n\n    constructor() {\n        this.db = new FirebaseDBService();\n        // this.store = store;\n    }\n\n    async getAllUsers() {\n        const res = await this.db.readData<{ [uid: string]: User }>('users');\n        const users = [];\n        if (res) {\n            for (const uid in res) {\n                const user = { ...res[uid], uid };\n                users.push(user);\n            }\n        }\n        return users;\n    }\n\n    async getAllTopics() {\n        const res = await this.db.readData<{ [topic: string]: true }>('notifications/topics');\n        if (res) {\n            return Object.keys(res);\n        }\n        return [];\n    }\n\n    async getAllRoles(): Promise<{ [role: string]: string[]; }> {\n        const roles = await this.db.readData<{ [role: string]: Permission }>('permissions');\n        const formattedRoles: { [role: string]: string[] } = {};\n        if (roles) {\n            for (const role in roles) {\n                formattedRoles[role] = Object.keys(roles[role]);\n            }\n        }\n        return formattedRoles;\n    }\n\n    getTokensFromUsers(users: User[]) {\n        return users.flatMap((user) => {\n            if (user.notificationTokens) {\n                return Object.keys(user.notificationTokens);\n            }\n        });\n    }\n\n    async saveTopic(topic: string, tokens: string[]) {\n        const topicObj: { [topic: string]: true } = tokens.reduce(\n            (tObj: { [topic: string]: true }, t) => ({ ...tObj, [t]: true }), {}\n        );\n        this.db.writeData<{ [topic: string]: true }>(`notifications/topics/${topic}`, topicObj);\n    }\n\n}\n\nexport type Permission = {\n    [uid: string]: true;\n}\n","import { Message } from \"@/model/FcmMessage\";\n\nexport class NotificationService {\n\n    async sendNotification(message: Message) {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify(message);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n        };\n\n        const res = await fetch(\"https://unruffled-liskov-633292.netlify.app/.netlify/functions/send\", requestOptions);\n        return await res.json();\n        \n    }\n    \n    async addToTopic(tokens: string[], topic: string) {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        \n        const raw = JSON.stringify({tokens, topic});\n        \n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n        };\n        \n        const res = await fetch(\"https://unruffled-liskov-633292.netlify.app/.netlify/functions/addToTopic\", requestOptions);\n        return await res.json();\n    }\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5543991e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { id: \"new_topic\" }\nconst _hoisted_2 = { class: \"desc\" }\nconst _hoisted_3 = { class: \"users_list\" }\nconst _hoisted_4 = [\"selected\", \"onClick\"]\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"divider\" }, null, -1))\nconst _hoisted_6 = { class: \"roles_list\" }\nconst _hoisted_7 = [\"selected\", \"onClick\"]\nconst _hoisted_8 = { class: \"desc\" }\nconst _hoisted_9 = [\"disabled\", \"loading\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t.users), 1),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, (user) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          class: \"toggable\",\n          key: user.uid,\n          selected: this.selectedUsers.includes(user.uid),\n          onClick: ($event: any) => (_ctx.toggleFromList(user.uid, this.selectedUsers))\n        }, _toDisplayString(user.info ? user.info.mail : user.uid), 9, _hoisted_4))\n      }), 128))\n    ]),\n    _hoisted_5,\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.roles, (role, key) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          class: \"toggable\",\n          key: role,\n          selected: this.selectedRole === key,\n          onClick: ($event: any) => (_ctx.toggleRole(key))\n        }, _toDisplayString(key), 9, _hoisted_7))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, _toDisplayString(_ctx.$t.topic), 1),\n    _createElementVNode(\"div\", {\n      class: \"input\",\n      contenteditable: \"true\",\n      inputmode: 'text',\n      onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.topic = $event.target.innerText))\n    }, null, 32),\n    _createElementVNode(\"div\", {\n      class: \"submit_button\",\n      onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.createTopic && _ctx.createTopic(...args))),\n      disabled: !_ctx.hasMandatoryFields(),\n      loading: _ctx.loading\n    }, _toDisplayString(_ctx.$t.newTopic), 9, _hoisted_9)\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { NotificationService } from \"@/services/NotificationService\";\nimport { AdminService } from \"@/services/AdminService\";\nimport { User } from \"@/model/User\";\n\nexport default defineComponent({\n  data() {\n    const users: (User & { uid: string })[] = [];\n    const roles: { [role: string]: string[] } = {};\n    const selectedUsers: string[] = [];\n    //const selectedRoles: string[] = [];\n    const selectedRole = \"\";\n    return {\n      topic: \"\",\n      users,\n      roles,\n      selectedUsers,\n      // selectedRoles,\n      selectedRole,\n      loading: false,\n    };\n  },\n  async mounted() {\n    const adminService = new AdminService();\n    this.users = await adminService.getAllUsers();\n    this.roles = await adminService.getAllRoles();\n  },\n  methods: {\n    hasMandatoryFields() {\n      return this.selectedUsers.length > 0 && this.topic !== \"\";\n    },\n    async createTopic() {\n      const tokens = this.users\n        .filter((u) => this.selectedUsers.includes(u.uid))\n        .flatMap((u) =>\n          Object.keys(u.notificationTokens ? u.notificationTokens : {})\n        );\n      if (this.topic !== \"\" && tokens.length > 0) {\n        this.loading = true;\n        await new NotificationService().addToTopic(tokens, this.topic);\n        await new AdminService().saveTopic(this.topic, tokens);\n        this.loading = false;\n        this.$router.back();\n      }\n    },\n    toggleFromList(el: string, list: string[]) {\n      const i = list.indexOf(el);\n      if (i >= 0) {\n        list.splice(i, 1);\n      } else {\n        list.push(el);\n      }\n    },\n    toggleRole(role: string) {\n      // this.toggleFromList(role, this.selectedRoles);\n      // this.roles[role].forEach((r) =>\n      //   this.toggleFromList(r, this.selectedUsers)\n      // );\n      if (this.selectedRole === role) {\n        this.selectedRole = \"\";\n        this.selectedUsers = [];\n      } else {\n        this.selectedRole = role;\n        this.selectedUsers = this.roles[role];\n      }\n    },\n  },\n});\n","import { render } from \"./NewTopic.vue?vue&type=template&id=5543991e&scoped=true&ts=true\"\nimport script from \"./NewTopic.vue?vue&type=script&lang=ts\"\nexport * from \"./NewTopic.vue?vue&type=script&lang=ts\"\n\nimport \"./NewTopic.vue?vue&type=style&index=0&id=5543991e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/TomaccioD/Documents/other/protezione-civile/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5543991e\"]])\n\nexport default __exports__"],"names":["AdminService","constructor","this","db","FirebaseDBService","res","readData","users","uid","user","push","Object","keys","roles","formattedRoles","role","getTokensFromUsers","flatMap","notificationTokens","topic","tokens","topicObj","reduce","tObj","t","writeData","NotificationService","message","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","fetch","json","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","id","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_toDisplayString","$t","_Fragment","_renderList","key","selected","selectedUsers","includes","onClick","$event","toggleFromList","info","mail","selectedRole","toggleRole","contenteditable","inputmode","onInput","target","innerText","args","createTopic","disabled","hasMandatoryFields","loading","newTopic","defineComponent","data","async","adminService","getAllUsers","getAllRoles","methods","length","filter","u","addToTopic","saveTopic","$router","back","el","list","i","indexOf","splice","__exports__"],"sourceRoot":""}